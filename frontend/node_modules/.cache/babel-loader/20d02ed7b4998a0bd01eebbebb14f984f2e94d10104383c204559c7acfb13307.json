{"ast":null,"code":"var _jsxFileName = \"/Users/dheerajmendu/Desktop/Milvian Group/guided-operations-main/frontend/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/Sidebar.css';\nimport burgerIcon from '../assets/icons/burger.png';\nimport settingIcon from '../assets/icons/settings.png';\n\n// Get backend URL from environment variables\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\nfunction Sidebar({\n  isOpen,\n  toggleSidebar\n}) {\n  _s();\n  const sidebarRef = useRef(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [manuals, setManuals] = useState([]); // New state for manuals\n  const [selectedManual, setSelectedManual] = useState(''); // New state for selected manual\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type === 'application/pdf') {\n      setSelectedFile(file);\n      setUploadStatus(''); // Reset upload status on file change\n    } else {\n      setUploadStatus('Please select a PDF file.');\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch(`${backendUrl}/api/process_pdf`, {\n        // Use backend URL from env\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Upload response:', result);\n        setUploadStatus('File uploaded successfully!');\n        // You can further handle the result (like showing the result in the UI)\n      } else {\n        console.error('Error uploading file');\n        setUploadStatus('Failed to upload the file.');\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus('Error uploading file. Please try again.');\n    }\n  };\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (sidebarRef.current && !sidebarRef.current.contains(event.target) && isOpen) {\n        toggleSidebar(); // Close the sidebar when clicking outside\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, toggleSidebar]);\n\n  // New useEffect to fetch manuals from backend\n  useEffect(() => {\n    const fetchManuals = async () => {\n      try {\n        const response = await fetch(`${backendUrl}/api/list_xml_files`);\n        const data = await response.json();\n        setManuals(data.xml_files);\n      } catch (error) {\n        console.error('Error fetching manuals:', error);\n      }\n    };\n    fetchManuals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar ${isOpen ? 'open' : ''}`,\n    ref: sidebarRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-toggle\",\n      onClick: toggleSidebar,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: burgerIcon,\n        alt: \"Toggle Sidebar\",\n        className: \"burger-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-toggle\",\n      onClick: toggleSidebar,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: settingIcon,\n        alt: \"Setting Sidebar\",\n        className: \"setting-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-content\",\n      children: isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sidebar-heading\",\n          children: \"Upload PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-header\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dropdown-arrow\",\n              children: isDropdownOpen ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload a PDF file to convert it into an XML file.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"upload-label\",\n            children: \"Choose a PDF file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-upload-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"application/pdf\",\n              onChange: handleFileChange,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-placeholder\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Browse files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag and drop file here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Limit 200MB per file. PDF only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-name\",\n              children: [\"Selected File: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleFileUpload,\n              children: \"Upload PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `upload-status ${uploadStatus.includes('success') ? 'success' : 'error'}`,\n            children: uploadStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manual-select-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"manual-select-label\",\n            children: \"Select Manual to Reference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedManual,\n            onChange: e => setSelectedManual(e.target.value),\n            className: \"manual-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a manual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), manuals.map((manual, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: manual,\n              children: manual\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"36O/4KWU7HC6OXDxBlW3DgCqzBU=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","burgerIcon","settingIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","backendUrl","process","env","REACT_APP_BACKEND_URL","Sidebar","isOpen","toggleSidebar","_s","sidebarRef","isDropdownOpen","setIsDropdownOpen","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","manuals","setManuals","selectedManual","setSelectedManual","toggleDropdown","handleFileChange","e","file","target","files","type","handleFileUpload","formData","FormData","append","response","fetch","method","body","ok","result","json","console","log","error","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","fetchManuals","data","xml_files","className","ref","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","style","display","name","includes","value","map","manual","index","_c","$RefreshReg$"],"sources":["/Users/dheerajmendu/Desktop/Milvian Group/guided-operations-main/frontend/src/components/Sidebar.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/Sidebar.css';\nimport burgerIcon from '../assets/icons/burger.png';\nimport settingIcon from '../assets/icons/settings.png';\n\n// Get backend URL from environment variables\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n\nfunction Sidebar({ isOpen, toggleSidebar }) {\n  const sidebarRef = useRef(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [manuals, setManuals] = useState([]); // New state for manuals\n  const [selectedManual, setSelectedManual] = useState(''); // New state for selected manual\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file && file.type === 'application/pdf') {\n      setSelectedFile(file);\n      setUploadStatus(''); // Reset upload status on file change\n    } else {\n      setUploadStatus('Please select a PDF file.');\n    }\n  };\n\n  const handleFileUpload = async () => {\n    if (!selectedFile) return;\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    try {\n      const response = await fetch(`${backendUrl}/api/process_pdf`, {  // Use backend URL from env\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Upload response:', result);\n        setUploadStatus('File uploaded successfully!');\n        // You can further handle the result (like showing the result in the UI)\n      } else {\n        console.error('Error uploading file');\n        setUploadStatus('Failed to upload the file.');\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus('Error uploading file. Please try again.');\n    }\n  };\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (sidebarRef.current && !sidebarRef.current.contains(event.target) && isOpen) {\n        toggleSidebar(); // Close the sidebar when clicking outside\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, toggleSidebar]);\n\n  // New useEffect to fetch manuals from backend\n  useEffect(() => {\n    const fetchManuals = async () => {\n      try {\n        const response = await fetch(`${backendUrl}/api/list_xml_files`);\n        const data = await response.json();\n        setManuals(data.xml_files);\n      } catch (error) {\n        console.error('Error fetching manuals:', error);\n      }\n    };\n\n    fetchManuals();\n  }, []);\n\n  return (\n    <div className={`sidebar ${isOpen ? 'open' : ''}`} ref={sidebarRef}>\n      <div className=\"sidebar-toggle\" onClick={toggleSidebar}>\n        <img src={burgerIcon} alt=\"Toggle Sidebar\" className=\"burger-icon\" />\n      </div>\n      <div className=\"sidebar-toggle\" onClick={toggleSidebar}>\n        <img src={settingIcon} alt=\"Setting Sidebar\" className=\"setting-icon\" />\n      </div>\n      <div className=\"sidebar-content\">\n        {isOpen && (\n          <>\n            <h2 className=\"sidebar-heading\">Upload PDF</h2>\n            <div className=\"dropdown-wrapper\">\n              <div className=\"dropdown-header\" onClick={toggleDropdown}>\n                <span>Instructions</span>\n                <span className=\"dropdown-arrow\">{isDropdownOpen ? '▲' : '▼'}</span>\n              </div>\n              {isDropdownOpen && (\n                <div className=\"dropdown-content\">\n                  <p>Upload a PDF file to convert it into an XML file.</p>\n                </div>\n              )}\n            </div>\n            <div className=\"upload-section\">\n              <p className=\"upload-label\">Choose a PDF file</p>\n              <label className=\"file-upload-area\">\n                <input\n                  type=\"file\"\n                  accept=\"application/pdf\"\n                  onChange={handleFileChange}\n                  style={{ display: 'none' }}\n                />\n                <div className=\"file-upload-placeholder\">\n                  <p>Browse files</p>\n                  <p>Drag and drop file here</p>\n                  <p>Limit 200MB per file. PDF only</p>\n                </div>\n              </label>\n              {selectedFile && (\n                <>\n                  <p className=\"file-name\">Selected File: {selectedFile.name}</p>\n                  <button onClick={handleFileUpload}>Upload PDF</button>\n                </>\n              )}\n              {uploadStatus && (\n                <p className={`upload-status ${uploadStatus.includes('success') ? 'success' : 'error'}`}>\n                  {uploadStatus}\n                </p>\n              )}\n            </div>\n            <div className=\"manual-select-section\">\n              <p className=\"manual-select-label\">Select Manual to Reference</p>\n              <select \n                value={selectedManual} \n                onChange={(e) => setSelectedManual(e.target.value)}\n                className=\"manual-select\"\n              >\n                <option value=\"\">Select a manual</option>\n                {manuals.map((manual, index) => (\n                  <option key={index} value={manual}>{manual}</option>\n                ))}\n              </select>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}