{"ast":null,"code":"var _jsxFileName = \"/Users/dheerajmendu/Desktop/Milvian Group/guided-operations-test/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const handleSendMessage = () => {\n    if (inputMessage.trim() !== '') {\n      setMessages([...messages, {\n        text: inputMessage,\n        sender: 'user'\n      }]);\n      setInputMessage('');\n      // Here you would typically send the message to a backend or chat service\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-display\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"EsKTm9PYySfYQYLkuLRorTz0Yzg=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","inputMessage","setInputMessage","handleSendMessage","trim","text","sender","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/dheerajmendu/Desktop/Milvian Group/guided-operations-test/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/ChatInterface.css';\n\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n\n  const handleSendMessage = () => {\n    if (inputMessage.trim() !== '') {\n      setMessages([...messages, { text: inputMessage, sender: 'user' }]);\n      setInputMessage('');\n      // Here you would typically send the message to a backend or chat service\n    }\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"message-display\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.sender}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"message-input\">\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIF,YAAY,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9BJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEM,IAAI,EAAEJ,YAAY;QAAEK,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC;MAClEJ,eAAe,CAAC,EAAE,CAAC;MACnB;IACF;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BZ,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BT,QAAQ,CAACU,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3Bf,OAAA;QAAiBW,SAAS,EAAE,WAAWG,OAAO,CAACJ,MAAM,EAAG;QAAAE,QAAA,EACrDE,OAAO,CAACL;MAAI,GADLM,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BZ,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEhB,YAAa;QACpBiB,QAAQ,EAAGC,CAAC,IAAKjB,eAAe,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,WAAW,EAAC;MAAmB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFnB,OAAA;QAAQ0B,OAAO,EAAEnB,iBAAkB;QAAAK,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhCID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}